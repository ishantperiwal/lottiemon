
    :root {
      --font-family-base: 'Inter', sans-serif;
      --color-primary: #4CAF50; /* Green */
      --color-primary-dark: #45a049;
      --color-secondary: #2196F3; /* Blue */
      --color-secondary-dark: #1e88e5;
      --color-accent: #FFC107; /* Yellow */
      --color-accent-dark: #fbc02d;
      --color-background: #f7f7f7; /* Slightly lighter */
      --color-surface: #ffffff; /* Card/element background */
      --color-border: #e0e0e0;
      --color-text-primary: #333333;
      --color-text-secondary: #666666;
      --color-text-on-primary: #ffffff;
      --color-text-on-secondary: #ffffff;
      --color-text-on-accent: #333333; /* Dark text on yellow */
      --color-disabled: #cccccc;
      --color-disabled-bg: #eeeeee;
      --color-checkerboard-light: #f0f0f0;
      --color-checkerboard-dark: transparent;

      --spacing-xs: 0.25rem;  /* 4px */
      --spacing-sm: 0.8rem;   /* 8px */
      --spacing-md: 1rem;     /* 16px */
      --spacing-lg: 1.5rem;   /* 24px */
      --spacing-xl: 2rem;     /* 32px */

      --border-radius-sm: 4px;
      --border-radius-md: 16px;
      --border-radius-lg: 16px;
      --border-radius-pill: 999px;

      --shadow-sm: 0 1px 2px rgba(0, 0, 0, 0.05);
      --shadow-md: 0 4px 6px rgba(0, 0, 0, 0.1);
      --shadow-lg: 0 10px 15px rgba(0, 0, 0, 0.1);

      --transition-speed: 0.2s ease-in-out;


      /* ... your existing variables ... */
    --overlay-fade-duration: 0.3s; /* Duration for overlay/blur fade */
    --content-fade-delay: 0.2s;  /* Delay before content starts fading in (should be less than overlay duration) */
    --content-fade-duration: 0.4s; /* Duration for content fade */
    }

    /* --- General Reset and Body Styles --- */
    *, *::before, *::after {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }

    body {
      font-family: var(--font-family-base);
      /* padding: var(--spacing-xl); */
      background-color: var(--color-background);
      color: var(--color-text-primary);
      display: flex;
      flex-direction: row;
      gap: 0;
      max-width: 1200px; /* Increased max-width slightly */
      height: 100vh;
      margin: auto;
      line-height: 1.6;
      justify-content: center;
      overflow-x: auto;

    }

    body::-webkit-scrollbar {
  display: none; /* Or width: 0; */
}

    /* --- Layout Areas --- */
    #editorArea, #previewArea {
      display: flex;
      flex-direction: column;
    }

    #editorArea {
      flex: 1;
      overflow-y: auto;
      min-height: 960px;
    height: 93vh; /* Adjusted max-height */
      /* Space for potential scrollbar (hidden) */
      /* Hide scrollbars */
      -ms-overflow-style: none;  /* IE 10+ */
      scrollbar-width: none;     /* Firefox */
      gap: 0;
      /*margin-top: var(--spacing-lg);*/

    }
    #editorArea::-webkit-scrollbar {
      display: none; /* Chrome, Safari, Opera */
    }

    #previewArea {
      flex: 1.1;
      left:0;
      top: var(--spacing-xl);

      align-items: center; /* Center items in preview area */
      gap: var(--spacing-lg);
    }


    #uploadButtonWrapper {
  display: inline-block; /* Allows transform and keeps it with the button's flow */
  transform-origin: center; /* Or 'left' or 'right' if you want it to scale from a side */
  transition: transform 0.5s cubic-bezier(0.6, 0, 0.4, 1) 0.3s,
              opacity 0.3s linear 0.3s;

  /* Initial state (visible) */
  transform: scaleX(1);
  opacity: 1;
}

/* Class to trigger the animation out for the wrapper */
#uploadButtonWrapper.animate-out {
  transform: scaleY(0);
  transform: translateY(-30px);
  opacity: 0;
  pointer-events: none; /* Prevent interaction after faded out */
}


    /* --- Upload Wrapper --- */
    #uploadWrapper {
      display: flex;
      gap: var(--spacing-lg);
      flex-direction: column-reverse;
      margin: auto;
      justify-content: center;
      align-items: center;

      opacity: 1;
      transition:
        transform 450ms cubic-bezier(0.8,0,0.9,0.9),
        opacity   280ms linear;
      text-align: center; /* Center the label/button */
    }

    .drag-drop-overlay {

        width: 18rem;
        height: 18rem;
  /*
        border: 2px dashed var(--color-border);
        border-radius: 3rem;
        background: rgba(255, 255, 255, 0.9);

        margin: auto;
        */

        /* align-items: center; (Removed for flex child control) */
        /* justify-content: center; (Removed for flex child control) */

        cursor: pointer;
        z-index: 99;
        transition: all var(--transition-speed);
  /*
     background-image: url('dropfile.png');
     background-repeat: no-repeat;
     background-position: center center;
     background-size: contain;
*/
        /* --- Added for Lottie positioning --- */
        display: flex;
        flex-direction: column;
        justify-content: flex-end; /* Pushes content (Lottie animation) to the bottom */
        align-items: center;    /* Centers content (Lottie animation) horizontally */
        padding-bottom: 0;   /* Adds some space from the very bottom edge */
        box-sizing: border-box; /* Ensures padding is included within the height */
        /* --- End Add --- */
      }
      #dragDropLottie {
        margin-bottom: -10px;
        pointer-events: none;
  width:120%;  /* Adjust width as needed */
   /* Adjust height as needed */
  /* Add margin-bottom if padding on parent is not sufficient or for more control */
  /* margin-bottom: 10px; */
}

/* Style for the realistic chat bubble */
.chat-bubble {
  position: absolute;
  top: 10px;  /* Keep original positioning */
  left: 10px; /* Keep original positioning */
  background-color: #F1EDD3;
  color: #313D36;
  font-size: 14px;
  font-weight: 600;
  padding: 10px 20px;
  border-radius: 999px; /* Rounded corners for the main bubble */

  z-index: 1; /* To ensure the main bubble's border can visually sit correctly over the tail's connection */
}

/* Tail for the chat bubble */
.chat-bubble::after {
  content: '';
  position: absolute;
  width: 16px;  /* Size of the square that forms the tail */
  height: 16px;
  background-color: #F1EDD3; /* Tail fill color, same as bubble */



  /* Rotate the square by 45 degrees to make it diamond-shaped */
  transform: rotate(45deg);

  /* Positioning the tail to appear from the bottom-right area of the bubble */
  /* 'bottom' positions the ::after relative to the .chat-bubble's bottom edge.
     A negative value pushes it "outwards". Adjust these for precise alignment.
     -8px is half the width/height of the square (16px/2).
     The additional -2px accounts for half the border thickness to align border edges.
     So, -10px should place the center of the rotated square's "connecting edge" roughly at the bubble's border.
  */
  bottom: -8px;
  left: 40px;   /* How far from the right edge of the bubble the tail is anchored */

  /* Rounding the tip:
     This rounds the bottom-right corner of the *unrotated* square.
     When rotated 45 degrees, this corner becomes the protruding tip of the tail.
  */
  border-bottom-right-radius: 3px; /* Adjust for desired roundness of the tip */

  /* z-index:
     Place the tail slightly behind the main bubble's content plane.
     The main bubble's border will then visually overlap the "transparent" bordered edges
     of the tail, creating a more continuous look.
  */
  z-index: 0;
}

/* Style for the random text container */

/*
  .drag-drop-overlay.dragover {
      border-color: var(--color-primary);
      background-color: rgba(76, 175, 80, 0.1);
      transform: scale(1.05);
    }
*/
    @keyframes slideUpFadeIn {
from {
  opacity: 0;
  transform: translateY(40px);
}
to {
  opacity: 1;
  transform: translateY(0);
}
}

@keyframes slideDownFadeIn {
from {
  opacity: 0;
  transform: translateY(-40px);
}
to {
  opacity: 1;
  transform: translateY(0);
}
}

#uploadLabel {
animation: slideUpFadeIn 1350ms cubic-bezier(0.1,0.1,0.1,1) forwards;
}

.drag-drop-overlay {
animation: slideDownFadeIn 950ms cubic-bezier(0.1,0.1,0.1,1) forwards;
}




    /* Style the label like a button */
    #uploadLabel {
      display: inline-block;
      padding: var(--spacing-md) var(--spacing-lg);
      background-color: #2A9484;
      color: var(--color-text-on-primary);
      border: none;
      border-radius: var(--border-radius-pill);
      cursor: pointer;
      font-size: 1rem;
      font-weight: 500;
      transition: background-color var(--transition-speed), transform var(--transition-speed), box-shadow var(--transition-speed);
      box-shadow: var(--shadow-sm);
    }
    #uploadLabel:hover {
      background-color: #1B7769;
      transform: translateY(-2px);
      box-shadow: var(--shadow-md);
    }
    /* Hide the actual file input */
    #fileInput {
      display: none;
    }

    /* --- Main Content Visibility --- */
    #mainContent {
      display: none; /* Initially hidden */
      width: 100%;
      flex-direction: row; /* Re-apply flex row for main layout */

      transform: scale(0.6);
      opacity: 0;
      transition:
        transform 450ms cubic-bezier(0.1,0.1,0.2,1),
        opacity   450ms cubic-bezier(0.1,0.1,0.2,1);
      margin-top: 80px;
    }

    /* --- Buttons --- */
    .btn {
      padding: var(--spacing-sm) var(--spacing-md);
      border: none;
      border-radius: var(--border-radius-pill); /* Pill shape */
      cursor: pointer;
      font-size: 0.9rem;
      font-weight: 500;
      transition: background-color var(--transition-speed), transform var(--transition-speed), box-shadow var(--transition-speed), opacity var(--transition-speed); /* Added opacity transition */
      display: inline-flex; /* Align icon and text if needed */
      align-items: center;
      justify-content: center;
      gap: var(--spacing-sm);
      text-decoration: none; /* Remove underline from potential <a> tags */
      box-shadow: var(--shadow-sm);
      position: relative; /* For loading spinner */
      overflow: hidden; /* Hide spinner overflow */
    }
    .btn:hover:not(:disabled) { /* Added :not(:disabled) */
      transform: translateY(-2px);
      box-shadow: var(--shadow-md);
    }
    .btn:active:not(:disabled) { /* Added :not(:disabled) */
      transform: translateY(-1px);
      box-shadow: var(--shadow-sm);
    }
    .btn:disabled,
    .btn--loading {
      background-color: var(--color-disabled-bg);
      color: var(--color-disabled);
      cursor: not-allowed;
      box-shadow: none;
      transform: none;
      opacity: 0.5; /* Consistent disabled opacity */
    }

    /* Specific Button Colors */
    .btn--primary {
      background-color: var(--color-primary);
      color: var(--color-text-on-primary);
    }
    .btn--primary:hover:not(:disabled):not(.btn--loading) {
      background-color: var(--color-primary-dark);
    }
    .btn--secondary {
      background-color: var(--color-secondary);
      color: var(--color-text-on-secondary);
    }
    .btn--secondary:hover:not(:disabled):not(.btn--loading) {
      background-color: var(--color-secondary-dark);
    }
    .btn--accent {
      background-color: var(--color-accent);
      color: var(--color-text-on-accent);
    }
    .btn--accent:hover:not(:disabled):not(.btn--loading) {
      background-color: var(--color-accent-dark);
    }

    /* Icon Buttons (Download, Trim, Crop) */
    .btn--icon {
      width: 2.5rem; /* Fixed size */
      height: 2.5rem;
      padding: 0; /* Remove padding */
      background-repeat: no-repeat;
      background-position: center;
      background-size: 1.25rem 1.25rem; /* Adjust icon size */
      text-indent: -9999px; /* Hide text */
    }
    #downloadDotLottieBtn{
      background-color: var(--color-secondary);
      background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"/><polyline points="7 10 12 15 17 10"/><line x1="12" y1="15" x2="12" y2="3"/></svg>');
      }

    #downloadJsonBtn {
      background-color: var(--color-secondary);
      background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"/><polyline points="7 10 12 15 17 10"/><line x1="12" y1="15" x2="12" y2="3"/></svg>');
    }
    #downloadJsonBtn:hover:not(:disabled) {
      background-color: var(--color-secondary-dark);
    }
    #downloadGifBtn {
      background-color: var(--color-accent);
      background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="%23333" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"/><polyline points="7 10 12 15 17 10"/><line x1="12" y1="15" x2="12" y2="3"/></svg>'); /* Dark icon */
    }
    #downloadGifBtn:hover:not(:disabled):not(.btn--loading) {
      background-color: var(--color-accent-dark);
    }
    #openOverlayBtn {
      background-color: #f0f0f0; /* Neutral grey */
    background-image: url('trim.svg'); /* Trim icon */
    }
    #openOverlayBtn:not(:disabled) {
       opacity: 1;
    }
    #openOverlayBtn:hover:not(:disabled) {
      background-color: #e0e0e0;
      box-shadow: none;
    }

    /* --- NEW CROP BUTTON STYLE --- */
    #openCropBtn {
      background-color: #f0f0f0; /* Neutral grey */
      /* Placeholder Crop Icon - Replace with your actual SVG */
      background-image: url('crop.svg');
    }
     #openCropBtn:not(:disabled) {
       opacity: 1;
     }
    #openCropBtn:hover:not(:disabled) {
      background-color: #e0e0e0;
      box-shadow: none;
    }
    /* --- END NEW CROP BUTTON STYLE --- */


    /* --- Loading Spinner (integrated) --- */
    .loading-spinner {
      border: 3px solid rgba(255, 255, 255, 0.3); /* Light border */
      border-top: 3px solid var(--color-text-on-primary); /* Primary spinner color */
      border-radius: 50%;
      width: 1.2rem;
      height: 1.2rem;
      animation: spin 0.8s linear infinite;
      position: absolute; /* Position inside button */
      top: 50%;
      left: 50%;
      margin-top: -0.6rem; /* Center vertically */
      margin-left: -0.6rem; /* Center horizontally */
      display: none; /* Hidden by default */
    }
    .btn--loading .loading-spinner {
      display: block;
    }
    /* Adjust spinner color for accent button */
    .btn--accent.btn--loading .loading-spinner {
        border-top-color: var(--color-text-on-accent);
    }
    /* Hide button icon when loading */
    .btn--loading {
        background-image: none !important; /* Hide icon */
    }

    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }

    /* --- Inputs & Selects --- */
    input[type="text"],
    input[type="number"],
    select {
      padding: var(--spacing-sm) var(--spacing-md);
      font-size: 0.9rem;
      border: 1px solid var(--color-border);
      border-radius: var(--border-radius-pill);
      background-color: var(--color-surface);
      transition: border-color var(--transition-speed), box-shadow var(--transition-speed);
      width: auto; /* Allow shrinking */
      min-width: 60px; /* Minimum width */
    }
    input[type="text"]:focus,
    input[type="number"]:focus,
    select:focus {
      outline: none;
      border-color: var(--color-primary);
      box-shadow: 0 0 0 2px rgba(76, 175, 80, 0.3); /* Focus ring */
    }

    /* Color Inputs */
    input[type="color"] {
      appearance: none;
      -webkit-appearance: none;
      width: 28px; /* Slightly larger */
      height: 28px;
      padding: 0;
      border: none;
      border-radius: 50%; /* Circular */
      cursor: pointer;
      vertical-align: middle;
      transition: transform var(--transition-speed), box-shadow var(--transition-speed);
      box-shadow: var(--shadow-sm);
    }
    input[type="color"]:hover {
        transform: scale(1.1);
        box-shadow: var(--shadow-md);
    }
    input[type="color"]::-webkit-color-swatch-wrapper {
      padding: 0;
      border-radius: 50%;
    }
    input[type="color"]::-webkit-color-swatch {
      border: 1px solid rgba(0,0,0,0.1); /* Subtle border */
      border-radius: 50%;
    }
    input[type="color"]::-moz-color-swatch {
        border: 1px solid rgba(0,0,0,0.1);
        border-radius: 50%;
    }

    /* Input Groups (Color + Hex) */
    .color-input-group {
      display: inline-flex; /* Use inline-flex */
      align-items: center;
      gap: var(--spacing-sm);
      background-color: #f0f0f0; /* Keep light grey bg */
      padding: var(--spacing-xs) var(--spacing-sm);
      border-radius: var(--border-radius-pill);
    }
    .color-input-group input[type="text"] {
      border: none;
      background: transparent;
      text-align: center;
      font-size: 0.9rem;
      padding: var(--spacing-xs) 0; /* Minimal padding */
      width: 70px; /* Fixed width for hex */
      border-radius: 0; /* Remove radius */
      box-shadow: none;
    }
    .color-input-group input[type="text"]:focus {
        box-shadow: none; /* No focus ring inside group */
    }
    .color-input-group input[type="color"] {
        width: 20px; /* Smaller inside group */
        height: 20px;
        box-shadow: none;
    }
    .color-input-group input[type="color"]:hover {
        transform: none;
        box-shadow: none;
    }

    /* Select Dropdown */
    select {
      appearance: none;
      -webkit-appearance: none;
      -moz-appearance: none;
      padding-right: var(--spacing-xl); /* Space for arrow */
      background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 10 6'><path fill='%23999' d='M0 0l5 6 5-6z'/></svg>");
      background-repeat: no-repeat;
      background-position: right var(--spacing-md) center;
      background-size: 0.6rem 0.36rem;
    }

    /* --- Accordion Styles --- */

    #colorEditor,#stopEditor, #animatedColorEditor, #animatedGradientEditor, #textEditorContainer{
      margin: 0 auto;
     width: 85%;

    }

    .accordion, .gradient-accordion {
      background-color: var(--color-surface);
      border: 1px solid var(--color-border);
      border-radius: var(--border-radius-md);
      box-shadow: var(--shadow-sm);
      overflow: hidden; /* Contain children */
       /* Remove space between accordions */
       margin-bottom: var(--spacing-sm);

    }



    .accordion-header, .gradient-header {
      height:60px;
      padding: var(--spacing-sm) var(--spacing-md);
      background-color: #f9f9f9; /* Slightly off-white header */
      font-weight: 600; /* Bolder */
      cursor: pointer;
      display: flex;
      justify-content: space-between;
      align-items: center;
      transition: background-color var(--transition-speed);
      position: relative; /* For icon positioning */
      border-bottom: 1px solid var(--color-border); /* Separator line */


    }
    .accordion-header:hover, .gradient-header:hover {
      background-color: #f0f0f0;
    }
    .accordion-header.active {
        border-bottom-color: transparent; /* Remove border when open */
    }

    /* Accordion Icon */
    .accordion-header::after, .gradient-header::after {
      content: ''; /* Required, but empty */
      display: inline-block; /* Needed for width/height */
      width: 1em;  /* Adjust size as needed */
      height: 1em; /* Adjust size as needed */
      opacity: 0.6;
      /* Placeholder Down Chevron - Replace with your actual SVG */
      background-image: url('down-chevron.svg');
      background-repeat: no-repeat;
      background-position: center;
      background-size: contain; /* Scale SVG to fit dimensions */
      transition: transform 0.3s ease-in-out; /* Keep your transition */
      margin-left: 8px; /* Adjust spacing if needed */
      vertical-align: middle; /* Align icon nicely with text */
    }

    .accordion-header.active::after, .gradient-header.active::after {
      transform: rotate(180deg); /* Rotate the SVG */
    }

    .accordion-header-content { /* Wrapper for title and controls */
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-grow: 1; /* Take remaining space */
        margin-right: var(--spacing-sm); /* Space before icon */
    }

    .accordion-header-controls {
      display: flex;
      align-items: center;
      gap: var(--spacing-sm);
    }

    .accordion-body, .gradient-content {
      padding: var(--spacing-md);
      display: none; /* Hidden by default */
      flex-direction: column;
      gap: 0.2rem;
      border-top: 1px solid var(--color-border); /* Separator when open */
    }
    .accordion-body.active, .gradient-content.active {
        display: flex; /* Show when active */
    }

    .color-row, .stop-row {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: var(--spacing-sm) 0; /* Vertical padding */
      gap: var(--spacing-md);
    }
    .stop-row .label {

        flex-shrink: 0;
        font-size: 0.9rem;
        color: var(--color-text-secondary);
    }
    .stop-row .stop-controls { /* Group controls on the right */
        display: flex;
        align-items: center;
        gap: var(--spacing-sm);
    }
    .color-dot {
        width: 22px;
        height: 22px;
        border-radius: 50%;
      border: 1px solid rgb(2 2 2 / 19%);
        flex-shrink: 0; /* Prevent shrinking */
        margin-left: -5px;
    }

    .stop-row input[type="number"] { /* Alpha input */
      appearance: none; /* Consider keeping this if you don't want default styling */
      -moz-appearance: textfield; /* Hides spinners in Firefox */
      border: none;
      border-radius: 999px;
      padding: 8px 8px 8px 10px; /* Increased right padding: top/right/bottom/left */
      background-color: #f0f0f0;
      transition: background-color 0.2s ease, border 0.2s ease;
      min-width: 68px;
      font-size: 16px;
      text-align: left; /* Align text to the left */
    }

    /* Hide spinners in WebKit browsers (Chrome, Safari) */
    .stop-row input[type="number"]::-webkit-outer-spin-button,
    .stop-row input[type="number"]::-webkit-inner-spin-button {
      margin-left: 6px; /* Optional: Adds space before spinner */
    }

    .gradient-preview {
      height: 16px; /* Taller */
      width: 80px;
      border-radius: var(--border-radius-pill);
      border: 1px solid var(--color-border);
      margin-left: var(--spacing-sm);
      pointer-events: none;
    }

    /* --- Section Cards (Preview Area) --- */
    .section-card {
      background: var(--color-surface);
      border: 1px solid var(--color-border);
      border-radius: var(--border-radius-lg); /* More rounded */
      width: 100%; /* Full width within preview area */
      max-width: 400px; /* Max width for cards */
      padding: var(--spacing-md) var(--spacing-lg);
      box-shadow: var(--shadow-md);
    }
    .section-card h3, .editor-heading {
      font-size: 0.75rem; /* Smaller heading */
      font-weight: 700; /* Bold */
      text-transform: uppercase;
      letter-spacing: 1.5px;
      color: var(--color-text-secondary); /* Grey heading */
      margin-bottom: var(--spacing-md); /* Space below heading */
      display: block; /* Ensure it takes full width */
    }
    .editor-heading{ margin:0 auto; width: 85%;  margin-top: 2.0rem ;  margin-bottom: 1.6rem ; }

    /* Headers within cards */
    .json-header, .gif-settings-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .gif-settings-header {  margin-bottom: var(--spacing-md); }/* Reset margin if h3 already has it */


    .json-header h3, .gif-settings-header h3 {
        margin-bottom: 0; /* Remove margin from h3 inside header */
    }
    .json-header-controls, .gif-header-controls {
        display: flex;
        align-items: center;
        gap: var(--spacing-sm);
    }

    /* GIF Settings Rows */
    .gif-settings {
      display: flex;
      align-items: center;
      justify-content: space-between;
      margin-top: var(--spacing-md);
      gap: var(--spacing-md);
    }
    .gif-settings label {
      font-weight: 500; /* Medium weight */
      font-size: 0.9rem;
      color: var(--color-text-primary);
      flex-shrink: 0; /* Prevent label shrinking */
    }
    .gif-settings .color-input-group-bg { /* Specific styling for BG color group */
        background-color: #f0f0f0;
        padding: var(--spacing-xs);
        padding-left: 8px;
        border-radius: var(--border-radius-pill);
        display: inline-flex; /* Changed to inline-flex */
        align-items: center;
        gap: var(--spacing-xs);
    }
    .gif-settings .color-input-group-bg input[type="text"] {
        width: 70px;
        border: none;
        background: transparent;
        text-align: center;
        padding: var(--spacing-xs) 0;
    }
    .gif-settings .color-input-group-bg input[type="color"] {
        width: 20px;
        height: 20px;
        box-shadow: none;
    }

    /* --- Toggle Switch --- */
    .switch {
      position: relative;
      display: inline-block;
      width: 44px; /* Slightly wider */
      height: 24px;
      vertical-align: middle; /* Align with labels */
    }
    .switch input {
      opacity: 0;
      width: 0;
      height: 0;
    }
    .slider {
      position: absolute;
      cursor: pointer;
      top: 0; left: 0; right: 0; bottom: 0;
      background-color: #ccc;
      transition: var(--transition-speed);
      border-radius: var(--border-radius-pill);
    }
    .slider:before {
      position: absolute;
      content: "";
      height: 18px; /* Larger handle */
      width: 18px;
      left: 3px;
      bottom: 3px;
      background-color: white;
      transition: var(--transition-speed);
      border-radius: 50%;
      box-shadow: 0 1px 3px rgba(0,0,0,0.2);
    }
    .switch input:checked + .slider {
      background-color: var(--color-primary);
    }
    .switch input:checked + .slider:before {
      transform: translateX(20px); /* Adjusted translation */
    }
    .switch input:focus + .slider {
        box-shadow: 0 0 0 2px rgba(76, 175, 80, 0.3); /* Focus ring */
    }

    /* --- Speed Control Slider --- */
    .speed-control {
      display: flex;
      align-items: center;
      gap: var(--spacing-md);
      width: 100%; /* Full width within its container */
      margin: var(--spacing-sm) 0; /* Vertical margin */
      background-color: white;

      border-radius: var(--border-radius-lg); /* More rounded */
      border-top-left-radius: 0;
      border-top-right-radius: 0;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      width: 100%; /* Full width within preview area */
      max-width: 400px; /* Max width for cards */
      padding: var(--spacing-md) var(--spacing-lg);

    }
    .slider-wrapper {
      flex-grow: 1; /* Take available space */
      position: relative;
    }
    /* Range Input Base */
    input[type="range"] {
      -webkit-appearance: none;
      appearance: none;
      width: 100%;
      height: 8px; /* Track height */
      background: #ddd; /* Track background */
      border-radius: var(--border-radius-pill);
      cursor: pointer;
      outline: none;
      margin: var(--spacing-sm) 0; /* Add some vertical margin */
    }
    /* Thumb (WebKit) */
    input[type="range"]::-webkit-slider-thumb {
      -webkit-appearance: none;
      appearance: none;
      width: 20px; /* Thumb size */
      height: 20px;
      background: var(--color-surface); /* Thumb color */
      border: 2px solid var(--color-primary); /* Thumb border */
      border-radius: 50%;
      cursor: pointer;
      margin-top: -15px; /* Adjust vertical position */
      box-shadow: var(--shadow-sm);
      transition: background-color var(--transition-speed), transform var(--transition-speed);
    }
    input[type="range"]:hover::-webkit-slider-thumb {
      background-color: var(--color-primary);
    }
    input[type="range"]:active::-webkit-slider-thumb {
        transform: scale(1.1);
    }
    input[type="range"]:focus::-webkit-slider-thumb {
        box-shadow: 0 0 0 3px rgba(76, 175, 80, 0.4); /* Focus ring on thumb */
    }
    /* Thumb (Mozilla) */
    input[type="range"]::-moz-range-thumb {
      width: 20px;
      height: 20px;
      background: var(--color-surface);
      border: 2px solid var(--color-primary);
      border-radius: 50%;
      cursor: pointer;
      box-shadow: var(--shadow-sm);
      transition: background-color var(--transition-speed), transform var(--transition-speed);
    }
    input[type="range"]:hover::-moz-range-thumb {
      background-color: var(--color-primary);
    }
    input[type="range"]:active::-moz-range-thumb {
        transform: scale(1.1);
    }
    input[type="range"]:focus::-moz-range-thumb {
        box-shadow: 0 0 0 3px rgba(76, 175, 80, 0.4);
    }

    /* Speed Value Display */
    .speed-value {
      background-color: var(--color-primary);
      color: var(--color-text-on-primary);
      padding: var(--spacing-xs) var(--spacing-md);
      border-radius: var(--border-radius-pill);
      font-size: 0.9rem;
      font-weight: 600;
      min-width: 60px; /* Ensure space */
      text-align: center;
      white-space: nowrap; /* Prevent wrapping */
      box-shadow: var(--shadow-sm);
    }

    /* --- Preview Window --- */
    .window-container {
      position: absolute;
      display: flex;
      flex-direction: column;
      width: 100%;
      max-width: 400px; /* Max width for preview */
      background: var(--color-surface);
      border-radius: var(--border-radius-lg); /* Match cards */
      box-shadow: var(--shadow-md); /* More prominent shadow */
      overflow: hidden;
      border: 1px solid var(--color-border);
      opacity: 0;
      z-index:98;

    }
    .window-header {
      display: flex;
      align-items: center;
      justify-content: space-between;
      background: #f2f2f2; /* Light grey header */
      padding: var(--spacing-sm) var(--spacing-md);
      border-bottom: 1px solid var(--color-border);
    }
    .window-title {
      font-size: 0.9rem;
      font-weight: 600;
      color: var(--color-text-primary);
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis; /* Handle long filenames */
      margin-right: var(--spacing-sm);
    }
    .window-close {
      width: 20px; /* Larger close button */
      height: 20px;
      line-height: 18px; /* Adjust line height */
      text-align: center;
      border: none;
      border-radius: 50%;
      background: #ff5f57; /* Mac red */
      color: rgba(0,0,0,0.6); /* Darker symbol */
      font-size: 12px;
      font-weight: bold;
      cursor: pointer;
      padding: 1px 0 0 1px;
      transition: background-color var(--transition-speed);
      flex-shrink: 0; /* Prevent shrinking */
    }
    .window-close:hover {
      background: #e0483e;
    }
    .window-body {
      position: relative;
      flex: 1; /* Take remaining space */
      display: flex;
      align-items: center;
      justify-content: center;
       /* Add some padding */


      width: 100%; /* Ensure it fills container width */
      overflow: visible; /* Lottie might overflow slightly */
      ransition: background-color var(--transition-speed); /* Smooth color transition */
    }
    /* Checkerboard Background */
    .checkerboard {
      background-image: linear-gradient(45deg, var(--color-checkerboard-light) 25%, var(--color-checkerboard-dark) 25%),
                        linear-gradient(-45deg, var(--color-checkerboard-light) 25%, var(--color-checkerboard-dark) 25%),
                        linear-gradient(45deg, var(--color-checkerboard-dark) 75%, var(--color-checkerboard-light) 75%),
                        linear-gradient(-45deg, var(--color-checkerboard-dark) 75%, var(--color-checkerboard-light) 75%);
      background-size: 20px 20px;
      background-position: 0 0, 0 10px, 10px -10px, -10px 0px;
    }
    #lottiePreview {
      position: relative;
      width: 100%;
      height: 100%;
      max-width: 100%;
      max-height: 100%;
      object-fit: contain; /* Ensure Lottie fits */
      display: block; /* Remove extra space below */
    }
    svg{
      display: block;
    }
    /* Style for the container holding the text and toggle */
  .preview-bg-toggle {
    position: absolute;
    top: var(--spacing-sm);
    right: var(--spacing-sm);
    z-index: 10;
    display: flex; /* Arrange text and switch horizontally */
    align-items: center; /* Vertically align items */
    gap: var(--spacing-sm); /* Space between text and switch */
    background-color: rgba(255, 255, 255, 0.7); /* Optional: slight white bg for contrast */
    padding: var(--spacing-xs) 10px; /* Optional: Padding */
    padding-right: 6px;
    border-radius: var(--border-radius-pill); /* Optional: Rounded corners */
    backdrop-filter: blur(2px); /* Optional: Frosted glass effect */
    box-shadow: 0 1px 2px rgba(0,0,0,0.1); /* Optional: Subtle shadow */
  }

  /* Style for the text label */
  .preview-bg-label {
    font-size: 0.75rem; /* Small text */
    font-weight: 600; /* Medium bold */
    color: var(--color-text-secondary); /* Grey text */
    white-space: nowrap; /* Prevent wrapping */
    cursor: default; /* Indicate it's just text */
  }

  /* Ensure the switch label itself doesn't add extra spacing */
  .preview-bg-toggle .switch {
    margin: 0; /* Reset margin if any */
    transform: scale(0.8); /* Keep the smaller scale if you liked it */
  }

  /* Remove checkerboard when solid background is active */
  .window-body.solid-bg-active {
    background-image: none; /* Remove the checkerboard gradient */
  }




    /* --- Overlays --- */
    .overlay {
      position: fixed;
      top: 0; left: 0;
      width: 100%; height: 100%;
      background: rgba(0, 0, 0, 0.6); /* Darker overlay */
      display: none; /* Hidden by default */
      justify-content: center;
      align-items: center;
      z-index: 1000;
      padding: var(--spacing-md); /* Padding for smaller screens */

    }
    .overlay.active {
        display: flex; /* Show when active */
    }
    .overlay-content {
      background: var(--color-surface);
      width: 80%;
      height: 80%;
      max-height: 80vh;
      /*padding: var(--spacing-lg);*/
      border-radius: var(--border-radius-lg);
      box-shadow: var(--shadow-lg);
      position: relative;
      overflow-y: auto; /* Allow scrolling if content overflows */
      display: flex; /* Added to allow iframe to fill height */
      flex-direction: column; /* Added */

    }

    .overlay-close  {
    font-family: Inter;
    font-weight: 600;
    border: 0px;
    color: #ffffff;
    position: absolute;
    top: 4%;
    left: calc(50% - 110px);
    cursor: pointer;
    /* width: 36px; */
    height: 36px;
    border-radius: 999px;
      background-color: #06060696;
    /* background-image: url(close.svg); */
    background-repeat: no-repeat;
    background-position: center;
    background-size: 55%;
    padding: 0 17px 0 8px;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: background-color 0.2s ease, transform 650ms cubic-bezier(0.6, 0, 0.4, 1), opacity 500ms ;
     gap: 5px;
     /* ADDED: Initial state for when overlay is closed (off-screen) */
     transform: translateY(-190%);
     opacity: 0;

    gap: 5px;
}

.overlay-close img{
  width: 18px;
  height: auto;
  margin-bottom: 1px;
}

.overlay.active .overlay-close {
    transform: translateY(0);
    opacity: 1;
}


    /* Keep these hover and focus rules (or modify if they conflict visually) */
    .overlay-close:hover {
        background-color: #e545458f; /* Darker red on hover */
        transform: scale(1.06);    /* Slightly enlarge on hover */
    }

    .overlay-close:focus {
        outline: none;            /* Remove default outline */
         /* Keep focus ring */
    }

#saveAndCloseBtn{
    background-color: #1ac08978;
    left: 50%;
    padding: 0 20px 0 16px;
}

#saveAndCloseBtn:hover{
    background-color: #119b6d;
}


    .overlay h3 { /* Style heading inside overlay */
        margin-bottom: var(--spacing-lg);
        font-size: 1.2rem;
        color: var(--color-text-primary);
        flex-shrink: 0; /* Prevent shrinking */
    }
    /* Settings Rows inside Overlay */
    .setting-row {
      margin-bottom: var(--spacing-lg); /* Increased spacing */
      display: flex;
      flex-direction: column; /* Stack label and controls vertically */
      align-items: flex-start; /* Align items to start */
      gap: var(--spacing-sm);
       flex-shrink: 0; /* Prevent shrinking */
    }
    .setting-row label {
      font-weight: 500;
      font-size: 0.9rem;
      color: var(--color-text-primary);
    }
    .setting-row .controls { /* Wrapper for inputs */
        display: flex;
        align-items: center;
        gap: var(--spacing-sm);
    }
    .setting-row input[type="text"] {
      width: 100px; /* Fixed width for hex in overlay */
    }

    /* Iframe in Overlay */
    #customContent {
      width: 100%;
      border: 1px solid var(--color-border); /* Add border */
      border-radius: var(--border-radius-md);
      flex-grow: 1; /* Added to fill remaining space */
    }

    /* Hidden GIF Container */
    #gifContainer {
      position:absolute;
      top:-9999px; left:-9999px;
      width:0; height:0;
      overflow:hidden;
    }

    /* --- Media Queries for Responsiveness --- */
    @media (max-width: 768px) {
      body {
        flex-direction: column;
        padding: var(--spacing-lg); /* Adjust padding */
      }
      #editorArea {
        max-height: none; /* Remove max-height */
        order: 2; /* Editor below preview */
        padding-right: 0; /* No padding needed */
      }
      #previewArea {
        position: static; /* Remove sticky */
        order: 1; /* Preview first */
        width: 100%;
        flex: none; /* Reset flex property */
      }
      .window-container, .section-card {
          max-width: none; /* Allow cards/preview to fill width */
      }
      .speed-control {
          flex-direction: column; /* Stack slider and value */
          align-items: stretch; /* Stretch items */
        }
      .speed-value {
          margin-top: var(--spacing-sm);
          text-align: center;
      }
       .overlay-content {
           width: 95%; /* Use more width on smaller screens */
           height: 90%;
           max-height: 90vh;
       }
    }

    /* --- Accessibility Helper --- */
    .sr-only {
        position: absolute;
        width: 1px;
        height: 1px;
        padding: 0;
        margin: -1px;
        overflow: hidden;
        clip: rect(0, 0, 0, 0);
        white-space: nowrap;
        border-width: 0;
    }

    .gif-settings .color-input-group-bg {
        transition: opacity 0s ease, visibility 0s ease;
        opacity: 1;
        visibility: visible;
      }

      .gif-settings .color-input-group-bg.hidden {
        opacity: 0;
        visibility: hidden;
        position: absolute; /* Remove from layout flow */
        pointer-events: none; /* Make it non-interactive when hidden */
      }

      /* Add wrapper to maintain consistent height */
      .gif-settings > div {
        position: relative;
        min-height: 32px; /* Match your control height */
        display: flex;
        align-items: center;
      }


      /* --- Overlays --- */
      .overlay {
        position: fixed;
        top: 0; left: 0;
        width: 100%; height: 100%;
        background: rgba(0, 0, 0, 0.85); /* Backdrop color */
        display: flex; /* Keep flex for centering */
        justify-content: center;
        align-items: center;
        z-index: 1000;
        padding: var(--spacing-md);

        /* --- BACKDROP ANIMATION (Fade only) --- */
        opacity: 0;
        pointer-events: none; /* Prevent interaction when hidden */
        /* Define backdrop closing transition */
        transition:
            /* Delay the backdrop fade-out until the content slide (350ms) is done */
            opacity 300ms linear 350ms, /* MODIFIED LINE */
            /* Delay pointer-events until near the end of the backdrop fade */
            pointer-events 0s linear 600ms; /* MODIFIED LINE */
      }

.overlay.active {
    /* --- BACKDROP ANIMATION (Fade only) --- */
    opacity: 1;
    pointer-events: auto; /* Allow interaction when visible */
    /* Define backdrop opening transition */
    transition: opacity 200ms linear; /* Faster fade in for backdrop */
}

.overlay-content {
  background: var(--color-surface);
  max-width: 1024px;
  width: 90%;
  height: 90%;
  max-height: 80vh;
  /*padding: var(--spacing-lg);*/
  border-radius: var(--border-radius-lg);
  box-shadow: var(--shadow-lg);
  position: relative;
  overflow-y: auto;
  display: flex;
  flex-direction: column;

  /* --- CONTENT ANIMATION (Slide + Fade) --- */
  opacity: 0;
  /* Start positioned lower down */
  transform: translateY(60px);
  /* Define content closing transition */
  transition: transform 350ms cubic-bezier(0.9, 0, 0.9, 0.9), /* Slide down */
              opacity 300ms linear; /* Fade out */
}

.overlay.active .overlay-content {
    /* --- CONTENT ANIMATION (Slide + Fade) --- */
    opacity: 1;
    /* End state: original position */
    transform: translateY(0);
    /* Define content opening transition */
    /* Add a small delay (e.g., 50ms) so backdrop starts fading first */
    transition: transform 550ms cubic-bezier(0.1, 0.1, 0.1, 1) 50ms, /* Slide up */
                opacity 400ms linear 100ms; /* Fade in (slightly longer delay) */
}

/* (Keep your other overlay styles like .overlay-close, .overlay h3 etc.) */
.window-title[contenteditable="true"] {
    cursor: text;
    min-width: 50px; /* Prevent it becoming too small */
    display: inline-block; /* Needed for min-width */
    padding: 2px 4px; /* Add some internal spacing */
    margin: -2px -4px; /* Compensate for padding */
    border-radius: 3px;
}
.window-title[contenteditable="true"]:focus {
    outline: 1px solid var(--color-primary); /* Highlight border on focus */
    background-color: #f0f0f0; /* Slight background change on focus */
}


/* Add these styles to your CSS */
#emptyStateDiv {
  display: none; /* Hidden by default */
  height: 100%; /* Set the desired height */
  max-height: 900px;
  width: 100%;
  display: flex; /* Use flexbox for centering */
  justify-content: center; /* Center horizontally */
  align-items: center; /* Center vertically */
  text-align: center;
  padding: var(--spacing-lg);
  /* Optional visual styling */
  pointer-events: none;
  border-radius: var(--border-radius-md);
  margin-top: -22%;
  box-sizing: border-box; /* Include padding/border in height */
}

#emptyStateDiv img {
  max-width: 68%; /* Prevent image from becoming too large */
  max-height: 68%;
  object-fit: contain; /* Ensure image scales nicely */
  opacity: 0.7; /* Optional: make it slightly faded */
}

/* Optional: Hide the main heading when the empty state is shown */
#editorArea.is-empty #colorInstancesLabel {
    display: none;
}

#midsection{
  height: 100%;
  flex: 0;

}


.text-accordion .gradient-header { /* Or your specific header class */
  /* Potentially adjust padding or item alignment if text input makes it crowded */
}

.text-editor-input {
  border: 1px solid var(--color-border);
  padding: var(--spacing-xs) var(--spacing-sm);
  border-radius: var(--border-radius-pill);
  font-size: 0.9rem;
  /* Add any other specific styles */
}

.text-instance-row {
    display: flex;
    align-items: center;
    gap: var(--spacing-md); /* Or your preferred gap */
    padding: var(--spacing-sm) 0; /* Vertical padding, no horizontal */

}
.text-instance-row:last-child {
    border-bottom: none; /* Remove border from last item */
}

.text-instance-row .label {

    flex-shrink: 0;
    font-size: 0.9rem;
    color: var(--color-text-secondary);
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

.text-instance-row .text-editor-input {
    flex-grow: 1;
    /* Add any other specific styles from your previous .text-editor-input */
    border: 1px solid var(--color-border);
    padding: 0.44rem var(--spacing-sm);
    border-radius: var(--border-radius-pill);
    font-size: 0.9rem;
}

.right-side-of-header{
max-width: 150px;
  display: flex;
  align-items: right;

}


/* --- Layer Name Pill Label --- */
.layer-name-pill {
display: inline-flex; /* Align icon and text */

gap: var(--spacing-xs); /* Space between icon and text */
color: var(--color-text-secondary); /* Darker grey text */
padding: 0rem 0.5rem;
border-radius: var(--border-radius-pill); /* Fully rounded */
font-size: 0.7rem; /* Smaller text size */
font-weight: 500;
 /* Space from the main label */
vertical-align: middle; /* Align nicely with the main label */
cursor: default; /* Indicate it's not directly interactive (hover provides info) */
white-space: nowrap; /* Prevent text wrapping */
max-width: 150px; /* Prevent overly long pills */
height: 25px;
overflow: hidden;
text-overflow: ellipsis;
align-items: center;
padding-top: 0.1rem;
}

.layer-name-pill img {
  width: 0.8rem;
      height: 0.8rem;
      fill: currentColor;
      flex-shrink: 0;
      opacity: 0.4;
      margin-right: 0.1rem;
    }

.title-wrapper{
  display: flex;
  width: 250px;
  gap: 0.4rem;
}

.layer-name-pill {
  transition: background-color var(--transition-speed), color var(--transition-speed);
}
/* when hd=true (i.e. “toggled on”/hidden), make it soft-red */
.layer-name-pill.hidden {
  background-color: #ffe6e6;
  color: #a00;
}
/* optional: slightly dim when off */
.layer-name-pill.hidden img {
  opacity: 0.2;
}

.layer-name-pill:hover {
  background-color: rgba(0, 0, 0, 0.05);   /* subtle highlight */
  color: rgba(0, 0, 0, 0.2);             /* or another accent color */
}


#openAssetReplacerBtn {
  background-color: #f0f0f0; /* Neutral grey or another color */
  /* Replace with your actual SVG icon for assets */
  background-image: url('assetreplace.svg');
}
#openAssetReplacerBtn:not(:disabled) {
   opacity: 1;
}
#openAssetReplacerBtn:hover:not(:disabled) {
  background-color: #e0e0e0;
  box-shadow: none;
}

#headerLottie{
  cursor: pointer;
  width:150px; height:50px;
}


.coffeeRoast-hidden, .coffeeRoast-visible { /* Consolidate common styles */
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.0); /* Start transparent */
    backdrop-filter: blur(0px); /* Start with no blur */
    -webkit-backdrop-filter: blur(0px);
    z-index: 1000;
    display: flex; /* Keep flex for centering */
    justify-content: center;
    align-items: center;
    opacity: 0; /* Start fully transparent */
    visibility: hidden; /* Start hidden */
    transition: background-color var(--overlay-fade-duration) ease-in-out,
                backdrop-filter var(--overlay-fade-duration) ease-in-out,
                -webkit-backdrop-filter var(--overlay-fade-duration) ease-in-out,
                opacity var(--overlay-fade-duration) ease-in-out,
                visibility 0s linear var(--overlay-fade-duration); /* Hide after fade out */
}


.coffeeRoast-visible {
    background-color: rgba(0, 0, 0, 0.65); /* Target background */
    backdrop-filter: blur(8px);            /* Target blur */
    -webkit-backdrop-filter: blur(8px);
    opacity: 1;                            /* Target opacity */
    visibility: visible;                   /* Make visible */
    transition-delay: 0s; /* Ensure visibility transition doesn't delay fade-in */
     transition: background-color var(--overlay-fade-duration) ease-in-out,
                backdrop-filter var(--overlay-fade-duration) ease-in-out,
                -webkit-backdrop-filter var(--overlay-fade-duration) ease-in-out,
                opacity var(--overlay-fade-duration) ease-in-out,
                visibility 0s linear 0s; /* Show immediately for fade in */
}

#baristaViewContainer {
    background: none;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    position: relative;
    width: 80%;
    max-width: 600px;
    height: 70%;
    max-height: 500px;
    display: flex;
    flex-direction: column;
    opacity: 0; /* Initially hidden */
    transform: scale(0.95); /* Optional: slight scale effect */
    transition: opacity var(--content-fade-duration) ease-in-out var(--content-fade-delay),
                transform var(--content-fade-duration) ease-in-out var(--content-fade-delay);
}

.coffeeRoast-visible #baristaViewContainer {
    opacity: 1;
    transform: scale(1);
}
#freshBrewFrame {
  width: 400px;
  height: 600px;
  border: none;
}

#closeEspressoShotBtn {
  margin-top: 10px;
  padding: 8px 15px;
  cursor: pointer;
  background-color: #f0f0f0;
  border: 1px solid #ccc;
  border-radius: 4px;
  align-self: flex-end;
}





#top-bar{
max-width: 1200px;
  position: absolute;
  display: flex;
  left: 50%;
  top: 0;
  width: 100%;
  height: 80px;
  transform: translateX(-50%);

}

.page-logo {



  max-width: 700px;            /* cap its size */
  height: 36px;
  z-index: 100;
  margin-top: 3px;
  margin-left: 4px;              /* sit above everything else */
}

.visibility-toggle{
  height: 18px;
  display: flex;
}

.textVisibility{
  margin: auto;
  height: 16px;
  width: 16px;
  margin-top: 2px;
  opacity: 0.6;
}


.lottie-player-controls {
       display: flex;
       align-items: center;
       gap: var(--spacing-sm);
       padding: var(--spacing-sm) var(--spacing-md);
       background-color: rgba(255, 255, 255, 1); /* Semi-transparent white */
       backdrop-filter: blur(5px); /* Frosted glass effect */
       border-top: 1px solid var(--color-border);
       width: 100%;
       position: relative; /* For speed slider pop-up */
   }

   .control-button {
       background: none;
       border: none;
       cursor: pointer;
       padding: var(--spacing-xs);
       display: flex;
       align-items: center;
       justify-content: center;
       color: var(--color-text-primary);
       transition: color var(--transition-speed);
   }
   .control-button:hover {
       color: var(--color-primary);
   }
   .control-button svg {
       width: 20px;
       height: 20px;
       fill: currentColor;
   }

   #lottieSeekbar {
       flex-grow: 1;
       height: 8px;
       -webkit-appearance: none;
       appearance: none;
       background: var(--color-border);
       border-radius: var(--border-radius-pill);
       cursor: pointer;
       outline: none;
   }
   #lottieSeekbar::-webkit-slider-thumb {
       -webkit-appearance: none;
       appearance: none;
       width: 16px;
       height: 16px;
       background: var(--color-primary);
       border-radius: 50%;
       cursor: pointer;
       box-shadow: var(--shadow-sm);
       margin-top: 0px; /* Adjust to center on track */
   }
   #lottieSeekbar::-moz-range-thumb {
       width: 16px;
       height: 16px;
       background: var(--color-primary);
       border-radius: 50%;
       border: none;
       cursor: pointer;
       box-shadow: var(--shadow-sm);
   }

   .speed-control-pill {
       display: flex;
       align-items: center;
       gap: var(--spacing-xs);
       padding: var(--spacing-xs) var(--spacing-sm);
       background-color: var(--color-surface);
       border: 1px solid var(--color-border);
       border-radius: var(--border-radius-pill);
       font-size: 0.8rem;
       font-weight: 500;
       cursor: pointer;
       transition: background-color var(--transition-speed), box-shadow var(--transition-speed);

   }
   .speed-control-pill:hover {
       background-color: #f0f0f0;

   }
   .speed-control-pill svg {
       width: 16px;
       height: 16px;
       fill: var(--color-text-secondary);
   }
   #speedValuePill {
       color: var(--color-text-primary);
   }

   .speed-slider-popup {
       position: absolute;
       bottom: calc(100% + var(--spacing-sm)); /* Position above the control bar */
       right: var(--spacing-md); /* Align with the speed pill or adjust as needed */
       background-color: var(--color-surface);
       padding: var(--spacing-md);
       border-radius: var(--border-radius-md);
       box-shadow: var(--shadow-lg);
       z-index: 10;
       display: none; /* Hidden by default */
       flex-direction: column;
       align-items: center;
       gap: var(--spacing-sm);
       width: 250px; /* Adjust width as needed */
   }
   .speed-slider-popup.active {
       display: flex;
       flex-direction: row;
   }
   .speed-slider-popup input[type="range"] { /* Re-style existing speed slider for popup */
     -webkit-appearance: none;
     appearance: none;
     width: 100%;
     height: 8px;
     background: #ddd;
     border-radius: var(--border-radius-pill);
     cursor: pointer;
     outline: none;
     margin: 0; /* Remove default margins */
   }
   .speed-slider-popup input[type="range"]::-webkit-slider-thumb {
     -webkit-appearance: none;
     appearance: none;
     width: 20px;
     height: 20px;
     background: var(--color-surface);
     border: 2px solid var(--color-primary);
     border-radius: 50%;
     cursor: pointer;
     margin-top: -14px; /* Adjust vertical position */
     box-shadow: var(--shadow-sm);
     transition: background-color var(--transition-speed), transform var(--transition-speed);
   }
   .speed-slider-popup input[type="range"]:hover::-webkit-slider-thumb { background-color: var(--color-primary); }
   .speed-slider-popup input[type="range"]:active::-webkit-slider-thumb { transform: scale(1.1); }
   .speed-slider-popup input[type="range"]:focus::-webkit-slider-thumb { box-shadow: 0 0 0 3px rgba(76, 175, 80, 0.4); }
   .speed-slider-popup input[type="range"]::-moz-range-thumb {
     width: 20px; height: 20px; background: var(--color-surface);
     border: 2px solid var(--color-primary); border-radius: 50%;
     cursor: pointer; box-shadow: var(--shadow-sm);
     transition: background-color var(--transition-speed), transform var(--transition-speed);
   }
   .speed-slider-popup input[type="range"]:hover::-moz-range-thumb { background-color: var(--color-primary); }
   .speed-slider-popup input[type="range"]:active::-moz-range-thumb { transform: scale(1.1); }
   .speed-slider-popup input[type="range"]:focus::-moz-range-thumb { box-shadow: 0 0 0 3px rgba(76, 175, 80, 0.4); }

   .dismiss-speed-popup {
       background: none;
       border: none;
       cursor: pointer;
       padding: var(--spacing-xs);
       align-self: flex-end; /* Position to the right */
   }
   .dismiss-speed-popup svg {
       width: 16px;
       height: 16px;
       fill: var(--color-text-secondary);
   }
   .dismiss-speed-popup:hover svg {
       fill: var(--color-text-primary);
   }
   /* --- END NEW VIDEO PLAYER CONTROLS --- */


   /* Add some basic styling for the new elements if needed */
   .preview-controls-top-left {
       /* Adjust positioning as needed */
   }

   #filterInfoPill {
       /* Styles are mostly inline for now, can be moved to CSS */
       box-shadow: var(--shadow-sm);
	    border: 2px solid rgb(255, 174, 170);
	   cursor: pointer;
   }
#filterInfoPill:hover {

    border: 2px solid #F7837D;

}
   /* Class to hide elements during filtering */
   .hidden-by-filter {
       display: none !important;
   }

   .accordion.hidden-by-filter,
   .gradient-accordion.hidden-by-filter {
       display: none !important;
   }

   /* For accordions that were part of the initial filter but don't currently match */
   .accordion-filtered-nomatch .accordion-header,
   .accordion-filtered-nomatch .gradient-header {
       opacity: 1;
       /* background-color: #f8f8f8; */ /* Optional: subtle background change for the header */
   }

   /* Hide the actual content rows within an accordion that's visible but doesn't currently match the filter */


   /* Style for individual rows if you decide to show them but mark as non-matching (alternative to hiding) */
   /*
   .row-filtered-nomatch {
       opacity: 0.5;
       pointer-events: none;
   }
   */

   .info-pill {
     position: absolute;
     bottom: var(--spacing-sm); /* Adjust if it overlaps with seekbar controls */
     left: var(--spacing-sm);
     z-index: 10;
     background-color: rgba(255, 255, 255, 0.75); /* Slightly more opaque for readability */
     padding: var(--spacing-xs) var(--spacing-sm);
     border-radius: var(--border-radius-pill);
     backdrop-filter: blur(3px);
     box-shadow: var(--shadow-sm);
     font-size: 0.7rem; /* Slightly smaller */
     font-weight: 600;
     color: #292929;
     white-space: nowrap;
     pointer-events: none; /* So it doesn't interfere with controls underneath */
   }

   /* Adjust positioning relative to the new player controls */
   .lottie-player-controls + #animationDurationPill {
       bottom: calc(var(--spacing-sm) + 60px); /* Example: 40px is roughly height of player-controls */
       /* Or adjust 'bottom' directly in .info-pill if player controls height is consistent */
   }




   .lottie-file-chip {
    padding: var(--spacing-xs) var(--spacing-md);
    background-color: #e0e0e0;
    color: var(--color-text-secondary);
    border-radius: var(--border-radius-pill);
    cursor: pointer;
    font-size: 0.8rem;
    font-weight: 500;
    transition: background-color var(--transition-speed), color var(--transition-speed), box-shadow var(--transition-speed);
    border: 1px solid transparent;
    white-space: nowrap;

    text-overflow: ellipsis;
    max-width: 150px; /* Adjust as needed */
    height: 2rem;
}
.lottie-file-chip:hover {
    background-color: #d0d0d0;
    box-shadow: var(--shadow-sm);
}
.lottie-file-chip.selected {
    background-color: var(--color-primary); /* Or your theme's accent color */
    color: var(--color-text-on-primary);
    border-color: var(--color-primary-dark); /* Or a darker shade of the accent */
    font-weight: 600;
}

.add-chip-button {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 32px;
    height: 32px;
    border-radius: 50%;
    background-color: #f0f0f0;
    color: #555; /* var(--color-text-secondary); */
    border: 2px dashed #ccc; /* var(--color-border); */
    cursor: pointer;
    font-size: 18px;
    font-weight: bold;
    line-height: 1;
    transition: background-color 0.2s, border-color 0.2s, transform 0.2s;
    flex-shrink: 0;
    margin-right: 4px; /* var(--spacing-sm); */
}

.add-chip-button:hover {
    background-color: #e0e0e0;
    border-color: #4CAF50; /* var(--color-primary); */
    transform: scale(1.05);
}

#lottieFileChips{
  overflow: auto;
  padding-left: 1rem;
}


#lottieFileChipsContainer.drag-over { /* Ensure your chip container has this ID */
    outline: 2px dashed #4CAF50; /* var(--color-primary); */
    outline-offset: -4px;
    background-color: rgba(76, 175, 80, 0.05); /* Example green tint */
}


/* --- All Chips Overlay Styles --- */
.all-chips-overlay-backdrop {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.65); /* Semi-transparent background */
    display: none; /* Initially hidden, JS will toggle to 'flex' */
    justify-content: center;
    align-items: flex-start; /* Align panel to the top */
    padding-top: 5vh;    /* Some padding from the top */
    z-index: 1000;       /* Ensure it's above other content */
    opacity: 0;
    transition: opacity 0.3s ease-in-out;
}

/* Style for when the overlay is active (JS will add/remove this or set display directly) */
.all-chips-overlay-backdrop.active {
    display: flex;
    opacity: 1;
}

.all-chips-overlay-panel {
    background-color: #ffffff; /* var(--color-surface); */
    width: 90%;
    max-width: 450px; /* Or your preferred max-width */
    height: auto;
    max-height: 80vh; /* Limit height and allow internal scroll */
    border-radius: 12px; /* var(--border-radius-lg); */
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2); /* var(--shadow-lg); */
    display: flex;
    flex-direction: column;
    overflow: hidden; /* Children will handle their own scroll */
    transform: translateY(-20px); /* Initial state for entry animation */
    opacity: 0;
    transition: transform 0.3s ease-out, opacity 0.3s ease-out;
}

.all-chips-overlay-backdrop.active .all-chips-overlay-panel {
    transform: translateY(0);
    opacity: 1;
}

.all-chips-overlay-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 12px 18px;
    border-bottom: 1px solid #e0e0e0; /* var(--color-border); */
    flex-shrink: 0; /* Prevent header from shrinking */
}

.all-chips-overlay-header h3 {
    margin: 0;
    font-size: 1.1em;
    font-weight: 600;
    color: #333; /* var(--color-text-primary); */
}

.all-chips-overlay-close-btn {
    background: none; /* #f1f1f1; */
    border: none; /* 1px solid #ddd; */
    border-radius: 50%;
    width: 28px;
    height: 28px;
    font-size: 18px; /* Adjust for '×' size */
    line-height: 26px; /* Center the '×' */
    text-align: center;
    cursor: pointer;
    color: #777; /* var(--color-text-secondary); */
    transition: background-color 0.2s, color 0.2s;
}

.all-chips-overlay-close-btn:hover {
    background-color: #e0e0e0; /* var(--color-hover-bg); */
    color: #333; /* var(--color-text-primary); */
}

.all-chips-overlay-list-container {
    overflow-y: auto;
    padding: 15px;
    flex-grow: 1; /* Allow list to take available space and scroll */
}

/* Styles for chips within the overlay list (these should already be fine from previous step) */
#allChipsListContainer .overlay-chip {
    display: block;
    width: calc(100% - 20px); /* Full width minus some padding */
    padding: 10px;
    margin-bottom: 8px;
    background-color: #f9f9f9;
    border: 1px solid #eee;
    border-radius: 6px; /* var(--border-radius-sm); */
    cursor: pointer;
    text-align: left;
    font-size: 0.9em;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    transition: background-color 0.2s, border-color 0.2s;
}
#allChipsListContainer .overlay-chip:last-child {
    margin-bottom: 0;
}
#allChipsListContainer .overlay-chip:hover {
    background-color: #f0f0f0;
    border-color: #ddd;
}
#allChipsListContainer .overlay-chip.selected {
    background-color: #e3f2fd; /* Light blue for selected var(--color-primary-light, #d1eaff); */
    border-color: #3498db;    /* var(--color-primary); */
    font-weight: 600;
    color: #1565c0;           /* Darker blue var(--color-primary-dark, var(--color-primary)); */
}

.more-chip {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: var(--spacing-xs) var(--spacing-md);
    background-color: #e9e9e9; /* Slightly different from normal chip */
    color: #2a9484;

    border-radius: var(--border-radius-pill);
    cursor: pointer;
    font-size: 0.8rem;
    font-weight: 600;
    border: 1px solid var(--color-border);
     /* If active chip is not the last one */
    white-space: nowrap;
    height: 2rem;
}
.more-chip:hover {
    background-color: #dcdcdc;
    box-shadow: var(--shadow-sm);
}

#uploadMultipleLabel{
  display:none;
}
/* Optional: Style for the container if it needs more than inline styles */
/* #lottieFileChipsContainer { ... } */
